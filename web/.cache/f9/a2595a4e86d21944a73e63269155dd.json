{"id":"node_modules/@babel/traverse/lib/path/inference/util.js","dependencies":[{"name":"/Users/parashgiri/Documents/BCU/project/sharecode/web/node_modules/@babel/traverse/lib/path/inference/util.js.map","includedInParent":true,"mtime":1703281409515},{"name":"/Users/parashgiri/Documents/BCU/project/sharecode/web/package.json","includedInParent":true,"mtime":1703281491731},{"name":"/Users/parashgiri/Documents/BCU/project/sharecode/web/node_modules/@babel/traverse/package.json","includedInParent":true,"mtime":1703281409515},{"name":"@babel/types","loc":{"line":7,"column":17,"index":140},"parent":"/Users/parashgiri/Documents/BCU/project/sharecode/web/node_modules/@babel/traverse/lib/path/inference/util.js","resolved":"/Users/parashgiri/Documents/BCU/project/sharecode/web/node_modules/@babel/types/lib/index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createUnionType = createUnionType;\nvar _t = require(\"@babel/types\");\nvar createFlowUnionType = _t.createFlowUnionType,\n  createTSUnionType = _t.createTSUnionType,\n  createUnionTypeAnnotation = _t.createUnionTypeAnnotation,\n  isFlowType = _t.isFlowType,\n  isTSType = _t.isTSType;\nfunction createUnionType(types) {\n  {\n    if (isFlowType(types[0])) {\n      if (createFlowUnionType) {\n        return createFlowUnionType(types);\n      }\n      return createUnionTypeAnnotation(types);\n    } else {\n      if (createTSUnionType) {\n        return createTSUnionType(types);\n      }\n    }\n  }\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/path/inference/util.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../src/path/inference/util.ts","name":"_t","original":{"line":1,"column":0},"generated":{"line":7,"column":4}},{"source":"../../../src/path/inference/util.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":6}},{"source":"../../../src/path/inference/util.ts","name":"require","original":{"line":1,"column":0},"generated":{"line":7,"column":9}},{"source":"../../../src/path/inference/util.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":16}},{"source":"../../../src/path/inference/util.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":17}},{"source":"../../../src/path/inference/util.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":31}},{"source":"../../../src/path/inference/util.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":32}},{"source":"../../../src/path/inference/util.ts","name":null,"original":{"line":7,"column":22},"generated":{"line":8,"column":0}},{"source":"../../../src/path/inference/util.ts","name":"createFlowUnionType","original":{"line":2,"column":2},"generated":{"line":8,"column":4}},{"source":"../../../src/path/inference/util.ts","name":null,"original":{"line":2,"column":21},"generated":{"line":8,"column":23}},{"source":"../../../src/path/inference/util.ts","name":"_t","original":{"line":6,"column":10},"generated":{"line":8,"column":26}},{"source":"../../../src/path/inference/util.ts","name":null,"original":{"line":6,"column":10},"generated":{"line":8,"column":28}},{"source":"../../../src/path/inference/util.ts","name":"createFlowUnionType","original":{"line":2,"column":2},"generated":{"line":8,"column":29}},{"source":"../../../src/path/inference/util.ts","name":null,"original":{"line":2,"column":21},"generated":{"line":8,"column":48}},{"source":"../../../src/path/inference/util.ts","name":"createTSUnionType","original":{"line":3,"column":2},"generated":{"line":9,"column":2}},{"source":"../../../src/path/inference/util.ts","name":null,"original":{"line":3,"column":19},"generated":{"line":9,"column":19}},{"source":"../../../src/path/inference/util.ts","name":"_t","original":{"line":6,"column":10},"generated":{"line":9,"column":22}},{"source":"../../../src/path/inference/util.ts","name":null,"original":{"line":6,"column":10},"generated":{"line":9,"column":24}},{"source":"../../../src/path/inference/util.ts","name":"createTSUnionType","original":{"line":3,"column":2},"generated":{"line":9,"column":25}},{"source":"../../../src/path/inference/util.ts","name":null,"original":{"line":3,"column":19},"generated":{"line":9,"column":42}},{"source":"../../../src/path/inference/util.ts","name":"createUnionTypeAnnotation","original":{"line":4,"column":2},"generated":{"line":10,"column":2}},{"source":"../../../src/path/inference/util.ts","name":null,"original":{"line":4,"column":27},"generated":{"line":10,"column":27}},{"source":"../../../src/path/inference/util.ts","name":"_t","original":{"line":6,"column":10},"generated":{"line":10,"column":30}},{"source":"../../../src/path/inference/util.ts","name":null,"original":{"line":6,"column":10},"generated":{"line":10,"column":32}},{"source":"../../../src/path/inference/util.ts","name":"createUnionTypeAnnotation","original":{"line":4,"column":2},"generated":{"line":10,"column":33}},{"source":"../../../src/path/inference/util.ts","name":null,"original":{"line":4,"column":27},"generated":{"line":10,"column":58}},{"source":"../../../src/path/inference/util.ts","name":"isFlowType","original":{"line":5,"column":2},"generated":{"line":11,"column":2}},{"source":"../../../src/path/inference/util.ts","name":null,"original":{"line":5,"column":12},"generated":{"line":11,"column":12}},{"source":"../../../src/path/inference/util.ts","name":"_t","original":{"line":6,"column":10},"generated":{"line":11,"column":15}},{"source":"../../../src/path/inference/util.ts","name":null,"original":{"line":6,"column":10},"generated":{"line":11,"column":17}},{"source":"../../../src/path/inference/util.ts","name":"isFlowType","original":{"line":5,"column":2},"generated":{"line":11,"column":18}},{"source":"../../../src/path/inference/util.ts","name":null,"original":{"line":5,"column":12},"generated":{"line":11,"column":28}},{"source":"../../../src/path/inference/util.ts","name":"isTSType","original":{"line":6,"column":2},"generated":{"line":12,"column":2}},{"source":"../../../src/path/inference/util.ts","name":"isTSType","original":{"line":6,"column":2},"generated":{"line":12,"column":10}},{"source":"../../../src/path/inference/util.ts","name":"_t","original":{"line":6,"column":10},"generated":{"line":12,"column":13}},{"source":"../../../src/path/inference/util.ts","name":null,"original":{"line":6,"column":10},"generated":{"line":12,"column":15}},{"source":"../../../src/path/inference/util.ts","name":"isTSType","original":{"line":6,"column":2},"generated":{"line":12,"column":16}},{"source":"../../../src/path/inference/util.ts","name":"isTSType","original":{"line":6,"column":2},"generated":{"line":12,"column":24}},{"source":"../../../src/path/inference/util.ts","name":null,"original":{"line":10,"column":7},"generated":{"line":13,"column":0}},{"source":"../../../src/path/inference/util.ts","name":"createUnionType","original":{"line":10,"column":16},"generated":{"line":13,"column":9}},{"source":"../../../src/path/inference/util.ts","name":"createUnionType","original":{"line":10,"column":31},"generated":{"line":13,"column":24}},{"source":"../../../src/path/inference/util.ts","name":"types","original":{"line":11,"column":2},"generated":{"line":13,"column":25}},{"source":"../../../src/path/inference/util.ts","name":null,"original":{"line":11,"column":37},"generated":{"line":13,"column":30}},{"source":"../../../src/path/inference/util.ts","name":null,"original":{"line":12,"column":25},"generated":{"line":13,"column":32}},{"source":"../../../src/path/inference/util.ts","name":null,"original":{"line":20,"column":9},"generated":{"line":14,"column":2}},{"source":"../../../src/path/inference/util.ts","name":null,"original":{"line":21,"column":4},"generated":{"line":15,"column":4}},{"source":"../../../src/path/inference/util.ts","name":"isFlowType","original":{"line":21,"column":8},"generated":{"line":15,"column":8}},{"source":"../../../src/path/inference/util.ts","name":null,"original":{"line":21,"column":18},"generated":{"line":15,"column":18}},{"source":"../../../src/path/inference/util.ts","name":"types","original":{"line":21,"column":19},"generated":{"line":15,"column":19}},{"source":"../../../src/path/inference/util.ts","name":null,"original":{"line":21,"column":24},"generated":{"line":15,"column":24}},{"source":"../../../src/path/inference/util.ts","name":null,"original":{"line":21,"column":25},"generated":{"line":15,"column":25}},{"source":"../../../src/path/inference/util.ts","name":null,"original":{"line":21,"column":26},"generated":{"line":15,"column":26}},{"source":"../../../src/path/inference/util.ts","name":null,"original":{"line":21,"column":27},"generated":{"line":15,"column":27}},{"source":"../../../src/path/inference/util.ts","name":null,"original":{"line":21,"column":28},"generated":{"line":15,"column":28}},{"source":"../../../src/path/inference/util.ts","name":null,"original":{"line":21,"column":30},"generated":{"line":15,"column":30}},{"source":"../../../src/path/inference/util.ts","name":null,"original":{"line":22,"column":6},"generated":{"line":16,"column":6}},{"source":"../../../src/path/inference/util.ts","name":"createFlowUnionType","original":{"line":22,"column":10},"generated":{"line":16,"column":10}},{"source":"../../../src/path/inference/util.ts","name":null,"original":{"line":22,"column":29},"generated":{"line":16,"column":29}},{"source":"../../../src/path/inference/util.ts","name":null,"original":{"line":22,"column":31},"generated":{"line":16,"column":31}},{"source":"../../../src/path/inference/util.ts","name":null,"original":{"line":23,"column":8},"generated":{"line":17,"column":8}},{"source":"../../../src/path/inference/util.ts","name":"createFlowUnionType","original":{"line":23,"column":15},"generated":{"line":17,"column":15}},{"source":"../../../src/path/inference/util.ts","name":null,"original":{"line":23,"column":34},"generated":{"line":17,"column":34}},{"source":"../../../src/path/inference/util.ts","name":"types","original":{"line":23,"column":35},"generated":{"line":17,"column":35}},{"source":"../../../src/path/inference/util.ts","name":null,"original":{"line":23,"column":56},"generated":{"line":17,"column":40}},{"source":"../../../src/path/inference/util.ts","name":null,"original":{"line":23,"column":57},"generated":{"line":17,"column":41}},{"source":"../../../src/path/inference/util.ts","name":null,"original":{"line":24,"column":6},"generated":{"line":18,"column":6}},{"source":"../../../src/path/inference/util.ts","name":null,"original":{"line":26,"column":6},"generated":{"line":19,"column":6}},{"source":"../../../src/path/inference/util.ts","name":"createUnionTypeAnnotation","original":{"line":26,"column":13},"generated":{"line":19,"column":13}},{"source":"../../../src/path/inference/util.ts","name":null,"original":{"line":26,"column":38},"generated":{"line":19,"column":38}},{"source":"../../../src/path/inference/util.ts","name":"types","original":{"line":26,"column":39},"generated":{"line":19,"column":39}},{"source":"../../../src/path/inference/util.ts","name":null,"original":{"line":26,"column":60},"generated":{"line":19,"column":44}},{"source":"../../../src/path/inference/util.ts","name":null,"original":{"line":26,"column":61},"generated":{"line":19,"column":45}},{"source":"../../../src/path/inference/util.ts","name":null,"original":{"line":27,"column":4},"generated":{"line":20,"column":4}},{"source":"../../../src/path/inference/util.ts","name":null,"original":{"line":27,"column":5},"generated":{"line":20,"column":5}},{"source":"../../../src/path/inference/util.ts","name":null,"original":{"line":27,"column":11},"generated":{"line":20,"column":11}},{"source":"../../../src/path/inference/util.ts","name":null,"original":{"line":28,"column":6},"generated":{"line":21,"column":6}},{"source":"../../../src/path/inference/util.ts","name":"createTSUnionType","original":{"line":28,"column":10},"generated":{"line":21,"column":10}},{"source":"../../../src/path/inference/util.ts","name":null,"original":{"line":28,"column":27},"generated":{"line":21,"column":27}},{"source":"../../../src/path/inference/util.ts","name":null,"original":{"line":28,"column":29},"generated":{"line":21,"column":29}},{"source":"../../../src/path/inference/util.ts","name":null,"original":{"line":29,"column":8},"generated":{"line":22,"column":8}},{"source":"../../../src/path/inference/util.ts","name":"createTSUnionType","original":{"line":29,"column":15},"generated":{"line":22,"column":15}},{"source":"../../../src/path/inference/util.ts","name":null,"original":{"line":29,"column":32},"generated":{"line":22,"column":32}},{"source":"../../../src/path/inference/util.ts","name":"types","original":{"line":29,"column":33},"generated":{"line":22,"column":33}},{"source":"../../../src/path/inference/util.ts","name":null,"original":{"line":29,"column":52},"generated":{"line":22,"column":38}},{"source":"../../../src/path/inference/util.ts","name":null,"original":{"line":29,"column":53},"generated":{"line":22,"column":39}},{"source":"../../../src/path/inference/util.ts","name":null,"original":{"line":30,"column":6},"generated":{"line":23,"column":6}},{"source":"../../../src/path/inference/util.ts","name":null,"original":{"line":31,"column":4},"generated":{"line":24,"column":4}},{"source":"../../../src/path/inference/util.ts","name":null,"original":{"line":32,"column":2},"generated":{"line":25,"column":2}},{"source":"../../../src/path/inference/util.ts","name":null,"original":{"line":33,"column":0},"generated":{"line":26,"column":0}}],"sources":{"../../../src/path/inference/util.ts":"import {\n  createFlowUnionType,\n  createTSUnionType,\n  createUnionTypeAnnotation,\n  isFlowType,\n  isTSType,\n} from \"@babel/types\";\nimport type * as t from \"@babel/types\";\n\nexport function createUnionType(\n  types: Array<t.FlowType | t.TSType>,\n): t.FlowType | t.TSType {\n  if (process.env.BABEL_8_BREAKING) {\n    if (isFlowType(types[0])) {\n      return createFlowUnionType(types as t.FlowType[]);\n    }\n    if (isTSType(types[0])) {\n      return createTSUnionType(types as t.TSType[]);\n    }\n  } else {\n    if (isFlowType(types[0])) {\n      if (createFlowUnionType) {\n        return createFlowUnionType(types as t.FlowType[]);\n      }\n\n      return createUnionTypeAnnotation(types as t.FlowType[]);\n    } else {\n      if (createTSUnionType) {\n        return createTSUnionType(types as t.TSType[]);\n      }\n    }\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"4e33741144e269df3f98ed0fd0c76d95","cacheData":{"env":{}}}